/*
 * File: app/controller/CFrmSchedule.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.CFrmSchedule', {
    extend: 'Ext.app.Controller',

    btnSaveCheckedStaffClick: function(button, e, eOpts) {
        var selectGroup = Ext.getCmp('cboGroupMemberBySchedule').getValue();
        var numberNode = [];

        Ext.getCmp('tpnMemberForSchedules').getView().node.cascadeBy(function(node){
            if(node.data.checked){
                if(node.get('id') % 1 === 0)
                   numberNode.push(node.get('id')*1);
            }
        });
        /*console.log(selectGroup);
        console.log(numberNode);*/

        if('default' != selectGroup){
           Ext.Msg.show({
               title: MessageCommon.TitleWarning,
               msg : MessageCommon.CheckGroupAddWarning,
               buttons : Ext.MessageBox.OK,
               icon: Ext.MessageBox.WARNING
           });
           return;
        }else if(0===numberNode.length){
            Ext.Msg.show({
               title: MessageCommon.TitleWarning,
               msg : MessageCommon.CheckNumberWarning,
               buttons : Ext.MessageBox.OK,
               icon: Ext.MessageBox.WARNING
           });
           return;
        }else{
            //console.log('Da len');
           var frmEditStr = Ext.create('MyApp.view.frmAddGroupMemberSchedule');
           frmEditStr.show();
        }

    },

    btnAddSchdule: function(button, e, eOpts) {
        e.addNew = true;
        var day = Ext.create('Extensible.calendar.view.Month');
        day.store = calendarPanel.store;
        day.onClick(e);
    },

    btnGroupMemberAddClick: function(button, e, eOpts) {
        var selectGroup = Ext.getCmp('cboGroupMemberBySchedule').getValue();
        var numberNode = [];

        Ext.getCmp('tpnMemberForSchedules').getView().node.cascadeBy(function(node){
            if(node.data.checked){
                if(node.get('id') % 1 === 0)
                   numberNode.push(node.get('id')*1);
            }
        });
        if('default' == selectGroup){
           Ext.Msg.show({
               title: MessageCommon.TitleWarning,
               msg : MessageCommon.CheckGroupEditWarning,
               buttons : Ext.MessageBox.OK,
               icon: Ext.MessageBox.WARNING
           });
           return;
        }else if(0===numberNode.length){
            Ext.Msg.show({
               title: MessageCommon.TitleWarning,
               msg: MessageCommon.CheckNumberWarning,
               buttons: Ext.MessageBox.OK,
               icon: Ext.MessageBox.WARNING
           });
           return;
        }else{
            var frmBtnScheduleGrp = Ext.create('MyApp.view.frmEditGroupMemberSchedule');
            Ext.getCmp('txtGroupMemberName').setValue(Ext.getCmp('cboGroupMemberBySchedule').getRawValue());
            frmBtnScheduleGrp.show();
        }
    },

    btnListTask: function(button, e, eOpts) {
        Ext.getStore('StListTask').load({
            params:{
                typeTaskList:1
            }
        });

        //console.log(Ext.getStore('StListTask').getCount());
    },

    btnHistoryTask: function(button, e, eOpts) {
        Ext.getStore('StListTask').load({
            params:{
                typeTaskList:2
            }
        });
    },

    btnMTGTask: function(button, e, eOpts) {
        Ext.getStore('StListTask').load({
            params:{
                typeTaskList:3
            }
        });
    },

    init: function(application) {
        this.control({
            "#btnSaveCheckedStaff": {
                click: this.btnSaveCheckedStaffClick
            },
            "#btnAddSchedule": {
                click: this.btnAddSchdule
            },
            "#btnEditGroup": {
                click: this.btnGroupMemberAddClick
            },
            "#btnListTask": {
                click: this.btnListTask
            },
            "#btnHistoryTask": {
                click: this.btnHistoryTask
            },
            "#btnMTGTask": {
                click: this.btnMTGTask
            }
        });
    }

});
