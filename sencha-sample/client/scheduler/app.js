/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    enabled: true
});


Ext.application({
    models: [
        'MdCustomGroup',
        'MdMemberGroup',
        'MdListTask',
        'MdCustomGroups',
        'MdProjectJob',
        'MdGeneral'
    ],
    stores: [
        'StGroupMember',
        'StMemberGroup',
        'StListTask',
        'StMembersGroups',
        'StProjectJob',
        'StPlanType',
        'StRoom',
        'StStaffStatus',
        'StSection',
        'StStaff'
    ],
    views: [
        'MyViewport',
        'frmGroupMember'
    ],
    controllers: [
        'CSchedule',
        'CFrmGroupMember',
        'CFrmSchedulerEditor'
    ],
    name: 'MyApp',

    launch: function() {
        Ext.create('MyApp.view.MyViewport');
        Ext.define('MyApp.util.Utilities', {
            singleton: true,
            token:null,
            userEmpInfo: null,
            sessionID: null,
            scheduleMembers: [Global.authData.userEmpInfo.EMP_ID * 1],
            scheduleMembersResource: [{
                'Id': Global.authData.userEmpInfo.EMP_ID * 1,
                'Name': Global.authData.userEmpInfo.EMP_NAME
            }],
            scheduleMembersLoaded: [Global.authData.userEmpInfo.EMP_ID * 1],
            scheduleMembersShouldLoad: [],
            scheduleMembersEditorID: [],
            scheduleMembersEditorName: []
        });

        MyApp.util.Utilities.token = Global.authData.token;
        MyApp.util.Utilities.sessionID = Global.authData.sessionID;
        MyApp.util.Utilities.userEmpInfo = Global.authData.userEmpInfo;

        var storeIDs = [
            'StMemberGroup',//Store for combobox group
            'StGroupMember',//Store for tree group and member
            'StListTask',
            'StMembersGroups',//Store for all member of all group
            'StPlanType',
            'StRoom',
            'StStaffStatus',
            'StSection',
            'StProjectJob',//Store for 1st tree
            'StStaff' //Store for 2nd tree
        ];

        for(var i = 0; i < storeIDs.length; i++){
            var store = Ext.getStore(storeIDs[i]);
            if(store){
                store.getProxy().url = apiUrl + store.getProxy().url;
            }
        }

        Ext.Ajax.on("beforerequest", function(conn, options){
            var xmlhttp = null;
            if (window.XMLHttpRequest){
                xmlhttp = new XMLHttpRequest();
            }
            else{
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            if(xmlhttp !== null){
                xmlhttp.open("GET",phpClientUrl + "/site/checkLogin", false);
                xmlhttp.send();
                var data = Ext.decode(xmlhttp.responseText);
                if(!data.success){
                    window.location = window.location;
                }
            }
            else
            {
                alert("Your browser does not support XMLHTTP.");
            }
        });
        //Ext.getCmp('pnlSchedule').eventStore.load();
        var stMembersGroupsLoaded = false;
        var stMemberGroup = false;
        Ext.getCmp('tpnMemberForSchedules').setLoading(true);
        Ext.getCmp('cboGroupMemberScheduler').setDisabled(true);
        Ext.getCmp('pnlSchedule').setLoading(true);

        Ext.getCmp('btnAdd').setDisabled(true);

        Ext.getStore('StGroupMember').load(function(){
            var interval = setInterval(function(){
                if(stMembersGroupsLoaded && stMemberGroup){
                    clearInterval(interval);
                    if(typeof(Ext.getStore('StGroupMember').data.items[1].get('CUSTOM_ID')) != 'undefined'){
                        Ext.getCmp('cboGroupMemberScheduler').setValue(Ext.getStore('StGroupMember').getAt(1).get('CUSTOM_ID'));
                        var cSchedule = new MyApp.controller.CSchedule();
                        Ext.getCmp('pnlSchedule').eventStore.add(Ext.data.Record(scheduleEventData));
                        cSchedule.filterScheduleMember(Ext.getStore('StGroupMember').getAt(1), true);
                        cSchedule.loadScheduleMember();
                        cSchedule.setScheduleMember();
                        Ext.getCmp('pnlSchedule').setLoading(false);
                        Ext.getCmp('cboGroupMemberScheduler').setDisabled(false);
                    }
                }
            }, 10);
        });
        Ext.getStore('StMemberGroup').load({
            callback : function(records, options, success) {
                if (success) {
                    stMemberGroup = true;
                    Ext.getCmp('tpnMemberForSchedules').expandAll();
                    Ext.getCmp('tpnMemberForSchedules').setLoading(false);
                    Ext.getStore('StPlanType').load();
                }
            }
        });
        Ext.getStore('StMembersGroups').load(function(){
            stMembersGroupsLoaded = true;
        });

        //<!--Load other stores
        Ext.getStore('StRoom').load(function(){
            this.insert(0, {'VALUE': 'null','TITLE': '---'});
        });
        Ext.getStore('StStaffStatus').load();

        Ext.getStore('StSection').load(function(){
            Ext.getStore('StProjectJob').load({
                params: {
                    sectionId: Ext.getStore('StSection').getAt(0).get('VALUE'),
                    chkOnlyActive: 1
                },
                callback: function(record, store, success){
                    if(success){
                        Ext.getCmp('btnAdd').setDisabled(false);
                    }
                }
            });
        });
        Ext.getStore('StStaff').load();
        //-->>
    }

});
