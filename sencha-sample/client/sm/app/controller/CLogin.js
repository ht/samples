/*
 * File: app/controller/CLogin.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HKD.controller.CLogin', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            cmbSection: 'selectfield#cmbSection',
            cmbEmployee: 'selectfield#cmbEmployee',
            txtPassword: 'passwordfield#txtPassword',
            txtPasswordSecret: 'passwordfield#txtPasswordSecret',
            btnLogin: 'button#btnLogin',
            cpLogin: 'container#ctnLogin',
            cpMain: 'panel#cpMain'
        },

        control: {
            "button#btnLogin": {
                tap: 'onButtonTapLogin'
            },
            "selectfield#cmbSection": {
                change: 'onSelectfieldChangeSection'
            },
            "container#ctnLogin": {
                initialize: 'onContainerInitializeLogin'
            }
        }
    },

    onButtonTapLogin: function(button, e, eOpts) {
        var cmbSection = this.getCmbSection();
        var cmbEmployee = this.getCmbEmployee();
        var txtPassword = this.getTxtPassword();
        var txtPasswordSecret = this.getTxtPasswordSecret();

        // Validate employee
        task.delay(500);
        if(cmbEmployee.getValue()===null || cmbEmployee.getValue()==='')
        {
            Ext.Msg.alert(MessageCommon.EmployeeNull);
            task.cancel();
            Ext.Viewport.unmask();
            return;
        }


        // Process login
        Ext.Ajax.request({
            method: 'POST',
            url: apiUrl + 'site/login',
            params: {
                empUsername: cmbEmployee.getValue(),
                empPassword: txtPassword.getValue(),
                empPasswordSecret: txtPasswordSecret.getValue().toString(),
                internalAccess: Global.internalAccess
            },
            success: function(data){
                var obj = Ext.decode(data.responseText);
                if(obj.success === true){
                    Ext.Ajax._defaultHeaders = {
                        'token': obj.data.token,
                        'sessionID': obj.data.sessionID
                    };

                    HKD.util.Utilities.token = obj.data.token;
                    HKD.util.Utilities.sessionID = obj.data.sessionID;
                    HKD.util.Utilities.userEmpInfo = obj.data.userEmpInfo;
                    task.cancel();
                    Ext.Viewport.unmask();

                    Ext.getStore('StEmployeesSearch').load();
                    Ext.getStore('StProgressesSearch').load();
                    Ext.getStore('StGroupMember').load();
                    Ext.getStore('StListMessage').load();
                    Ext.getStore('StCircleGroup').load({
                        callback: function(records, operation, success){
                            if(success){
                                //console.log(success);
                                this.insert(0,{'TITLE':null,'VALUE':null});
                            }
                        }
                    });
                    txtPassword.setValue('');
                    obj.data.apiUrl = apiUrl;
                    Ext.Ajax.request({
                        method: 'POST',
                        url: 'site/login',
                        params: {data: Ext.encode(obj.data)},
                        success: function(data){
                            var obj = Ext.decode(data.responseText);
                            if(obj.success){
                                Ext.Viewport.animateActiveItem({xtype : 'main'}, {type:'pop'});
                                Ext.Ajax.on("beforerequest", function(conn, options){
                                    var xmlhttp = null;
                                    if (window.XMLHttpRequest){
                                        xmlhttp = new XMLHttpRequest();
                                    }
                                    else{
                                        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                                    }
                                    if(xmlhttp !== null){
                                        xmlhttp.open("GET",phpClientUrl + "/site/checkLogin", false);
                                        xmlhttp.send();
                                        var data = Ext.decode(xmlhttp.responseText);
                                        if(!data.success){
                                            window.location = window.location;
                                        }
                                    }
                                    else
                                    {
                                        alert("Your browser does not support XMLHTTP.");
                                    }
                                });
                            }
                        }
                    });
                    // Show main

                }else{
                    Ext.Msg.alert(MessageCommon.PasswordWrong);		//Alert password
                    task.cancel();
                    Ext.Viewport.unmask();
                }
            },
            failure: function(error){
                task.cancel();
                Ext.Viewport.unmask();
            }
        });
    },

    onSelectfieldChangeSection: function(selectfield, newValue, oldValue, eOpts) {
         var cmbEmployee = this.getCmbEmployee();
        // filter employee base on section
        cmbEmployee.getStore().clearFilter();
        cmbEmployee.setValue('');
        if(newValue !== null){
            cmbEmployee.getStore().filter([{
                property:'EMP_SECTION_ID',
                value: newValue,
                exactMatch: true
            }]);
            if(typeof(cmbEmployee.getStore().getAt(0)) != 'undefined')
                cmbEmployee.setValue(cmbEmployee.getStore().getAt(0).get('EMP_ID'));
        }

    },

    onContainerInitializeLogin: function(component, eOpts) {
        task.delay(500);
        task.cancel();
        Ext.Viewport.unmask();
        if(Global.internalAccess){
            this.getTxtPasswordSecret().hide();
        }
    }

});