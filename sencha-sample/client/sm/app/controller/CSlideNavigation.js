/*
 * File: app/controller/CSlideNavigation.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HKD.controller.CSlideNavigation', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            mainContainerView: 'mainContainerView',
            mainDisplayView: 'panel#mainDisplayView',
            mainDisplayView111: 'mainContainerView panel[cls=main-display-view]',
            sidebar: 'sidebar',
            sidebarMenu: 'sidebar list',
            tabPanel: 'tabpanel#tabPanel',
            sidebarBtn: 'button[cls=sidebar-btn]',
            filterMessageBtn: 'button#btnFilterMessage'
        },

        control: {
            "sidebarBtn": {
                tap: 'onSidebarBtnTap'
            },
            "sidebarMenu": {
                itemtap: 'onSidebarMenuItemTap'
            },
            "mainContainerView": {
                initialize: 'onMainContainerViewInit'
            },
            "button#btnHome": {
                tap: 'onButtonTapHome'
            }
        }
    },

    onSidebarBtnTap: function(button, e, eOpts) {
        this.getSidebar().show();
        this.slideOut();


    },

    onSidebarMenuItemTap: function(dataview, index, target, record, e, eOpts) {
        this.slideIn();
        //console.log('out');
        //if (this.selectedIndex !== index) {
        // console.log('in');
        this.selectedIndex = index;
        var mainDisplayView = this.getMainDisplayView();

        // Here you can switch view if you want because main display view has layout card (check if it has the old view otherwise add new view).
        // But for simple, I just remove the old view and add new one
        mainDisplayView.removeAt(0);
        var value = record.data.value;
        //console.log(value);
        switch(value){
            case '0':
                mainDisplayView.add({
                    xtype: 'navigationview',
                    showAnimation: 'slide',
                    navigationBar: null,
                    items: [
                        {
                            xtype: 'navigationBar'
                        },
                        {
                            xtype: 'cpListMessage'
                        }
                    ]
                });
                this.getFilterMessageBtn().show();
                break;
            case '1':
                var newController = Ext.create('HKD.controller.CUCEmployees', {application: HKD.app}).resetUCEmployees();
                HKD.util.Utilities.frmMessageStatusAddNew = true;
                mainDisplayView.add({
                    xtype: 'navigationview',
                    showAnimation: 'slide',
                    navigationBar: null,
                    items: [
                        {
                            xtype: 'navigationBar'

                        },{
                            xtype: 'cpAddEditMessage'
                        }
                    ]
                });
                Ext.getCmp('txtEmployees').setLabel('送信先');
                this.getFilterMessageBtn().hide();
                break;
            case '2':
                mainDisplayView.add({
                    xtype: 'navigationview',
                    showAnimation: 'slide',
                    navigationBar: null,
                    items: [
                        {
                            xtype: 'navigationBar'
                        },{
                            xtype: 'cpCircle'
                        }
                    ]
                });
                this.getFilterMessageBtn().hide();
                break;
            case '3':
                var newController = Ext.create('HKD.controller.CUCEmployees', {application: HKD.app}).resetUCEmployees();
                mainDisplayView.add({
                    xtype: 'navigationview',
                    showAnimation: 'slide',
                    navigationBar: null,
                    items: [
                        {
                            xtype: 'navigationBar'
                        },
                        {
                            xtype: 'cpListSchedule'
                        }
                    ]
                });
                this.getFilterMessageBtn().hide();
                break;
            case '4':

                Ext.Ajax.request({
                    url: 'site/logout',
                    method: 'get',
                    success: function(data){
                        window.location = window.location;
                    },
                    failure: function(error){

                    }
                });
                break;
        }
    },

    onMainContainerViewInit: function() {
        // We will setup the defaul view here
        var sidebarMenu = this.getSidebarMenu(),
            record = sidebarMenu.getStore().getAt(0);
            sidebarMenu.select(0);
        var mainDisplayView = this.getMainDisplayView();
        //console.log(mainDisplayView);
        // You can just add panel view if there's no need to use navigation view
        mainDisplayView.add({
            xtype: 'navigationview',
            showAnimation: 'slideIn',
            navigationBar: null,
            items: [{
                xtype: 'navigationBar'
            },{
                xtype: 'cpListMessage'
            }]});

    },

    onButtonTapHome: function(button, e, eOpts) {
        var mainDisplayView = this.getMainDisplayView();
        mainDisplayView.removeAt(0);
        mainDisplayView.add({
            xtype: 'navigationview',
            showAnimation: {type: 'slideIn',duration:300,
                            direction:'left'},
            navigationBar: null,
            items: [{
                xtype: 'navigationBar'
            },{
                xtype: 'cpListMessage'
            }]});

    },

    slideIn: function() {
        // for main view
                new Ext.Anim({
                    autoClear: false,
                    to: {
                        '-webkit-transform': "translate3d(0, 0, 0)"
                    },
                    duration: this.duration,
                    easing: 'ease-out'
                }).run(this.getMainContainerView().element);

                // for sidebar
                new Ext.Anim({
                    autoClear: false,
                    to: {
                        '-webkit-transform': "translate3d(-" + this.defaultSideX + "px, 0, 0)"
                    },
                    duration: this.duration,
                    easing: 'ease-out'
                }).run(this.getSidebar().element);

                // hide the overlay
                if (this.overlayView) this.overlayView.hide();
    },

    slideOut: function() {
        // show the overlay on the navigaion view
        if (!this.overlayView) this.getMainContainerView().add(this.createOverlayView());
        this.overlayView.show();

        // for main view
        new Ext.Anim({
            autoClear: false,
            to: {
                '-webkit-transform': "translate3d(" + this.defaultNavX + "px, 0, 0)"
            },
            duration: this.duration,
            easing: 'ease-out'
        }).run(this.getMainContainerView().element);

        // for sidebar
        new Ext.Anim({
            autoClear: false,
            to: {
                '-webkit-transform': "translate3d(0, 0, 0)"
            },
            duration: this.duration,
            easing: 'ease-out'
        }).run(this.getSidebar().element);
    },

    init: function(application) {
        this.callParent();
        this.initContainer();
    },

    initContainer: function() {
        this.duration = 250;
        this.defaultNavX = 280;
        this.defaultSideX = 80;
    },

    createOverlayView: function() {
        this.overlayView = Ext.create('Ext.Panel', {
                    top: 0,
                    width: '100%',
                    height: '100%',
                    layout: 'fit',
                    cls: 'overlay-view',
                    listeners: {
                        scope: this,
                        tap: {
                            fn: this.slideIn,
                            element: 'element'
                        },
                        drag: {
                            fn: this.onDrag,
                            element: 'element'
                        },
                        dragend: {
                            fn: this.onDragEnd,
                            element: 'element'
                        }
                    }
                });

                return this.overlayView;
    },

    onDrag: function(e) {
        var mainEl = this.getMainContainerView().element,
                    sidebarEl = this.getSidebar().element,
                    distance = e.x - e.previousX,
                    mainMoveX = mainEl.getX() + distance,
                    sideMoveX = sidebarEl.getX() + (distance * this.defaultSideX / this.defaultNavX);

                // drag direction (true: right - false: left)
                this.dragDirection = (distance > 0);

                // set move x
                var style = {
                    '-webkit-transition': 'none',
                    'transition': 'none'
                };

                // navigation
                style['-webkit-transform'] = 'translate3d(' + mainMoveX + 'px, 0, 0)';
                if (mainMoveX < 0) style['-webkit-transform'] = 'translate3d(0, 0, 0)';
                else if (mainMoveX > this.defaultNavX) style['-webkit-transform'] = 'translate3d(' + this.defaultNavX + 'px, 0, 0)';
                mainEl.setStyle(style);

                // sidebar
                style['-webkit-transform'] = 'translate3d(' + sideMoveX + 'px, 0, 0)';
                if (sideMoveX > 0) style['-webkit-transform'] = 'translate3d(0, 0, 0)';
                else if (sideMoveX < -this.defaultSideX) style['-webkit-transform'] = 'translate3d(-' + this.defaultSideX + 'px, 0, 0)';
                sidebarEl.setStyle(style);
    },

    onDragEnd: function(e, node, options) {
        if (this.dragDirection) this.slideOut();
                else this.slideIn();
    }

});